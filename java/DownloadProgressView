import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Rect;
import android.graphics.RectF;
import android.util.AttributeSet;
import android.view.View;

public class DownloadProgressView extends View {
    private static final int BG_ARC_COLOR = 0x4cffffff;
    private static final int ARC_COLOR = 0x99000000;
    private static final float STROKE_WIDTH = 7f;

    private Context mContext;
    private Paint mProgressPaint;
    private Paint mTextPaint;
    private Paint mBGPaint;
    private float mProgress = 0;
    private int mStrokeWidth;
    String mText = "";
    private int textX;
    private int textY;
    private RectF content = new RectF();
    private int whiteBgDimen = 0;
    private Rect textBounds = new Rect();

    public DownloadProgressView(Context context) {
        super(context);
        this.mContext = context;
        init();
    }

    public DownloadProgressView(Context context, AttributeSet attrs) {
        super(context, attrs);
        this.mContext = context;
        init();
    }

    private void init() {
        //初始化进度条paint
        mStrokeWidth = ScreenUtil.dp2px(mContext, STROKE_WIDTH);
        mProgressPaint = new Paint();
        mProgressPaint.setAntiAlias(true);
        mProgressPaint.setStrokeWidth(mStrokeWidth);
        mProgressPaint.setStyle(Paint.Style.STROKE);
        mProgressPaint.setStrokeCap(Paint.Cap.BUTT);

        //初始化文字paint
        mTextPaint = new Paint();
        mTextPaint.setAntiAlias(true);
        mTextPaint.setColor(Color.BLACK);
        mTextPaint.setTextSize(ScreenUtil.sp2px(14));//设置文字大小

        mBGPaint = new Paint();
        mBGPaint.setAntiAlias(true);
        mBGPaint.setStyle(Paint.Style.FILL);
        mBGPaint.setColor(Color.WHITE);
    }

    /**
     *
     * @param progress 0 ~ 1
     */
    public void setProgress(float progress) {
        mProgress = progress;
        mText = String.valueOf((int)((mProgress+0.005f) * 100)) + "%";
        //测量文字大小及位置
        mTextPaint.getTextBounds(mText, 0, mText.length(), textBounds);
        textX = (int) content.centerX() - textBounds.width() / 2;
        textY = (int) content.centerY() + textBounds.height() / 2;
        invalidate();
    }

    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
        //测量进度条大小
        content.left = mStrokeWidth / 2;
        content.top = mStrokeWidth / 2;
        content.bottom = getMeasuredHeight() - mStrokeWidth / 2;
        content.right = getMeasuredWidth() - mStrokeWidth / 2;
        whiteBgDimen = (getMeasuredWidth() - mStrokeWidth * 2) / 2;
    }

    @Override
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);
        //绘制进度条
        mProgressPaint.setColor(ARC_COLOR);
        float degree = 360 * mProgress;
        canvas.drawArc(content, 270, degree, false, mProgressPaint);
        mProgressPaint.setColor(BG_ARC_COLOR);
        canvas.drawArc(content, 270 + degree, 360 - degree, false, mProgressPaint);

        canvas.drawCircle(content.centerX(), content.centerY(), whiteBgDimen, mBGPaint);
        //绘制文字
        canvas.drawText(mText, textX, textY, mTextPaint);
    }
}
